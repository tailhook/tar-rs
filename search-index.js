var searchIndex = {};
searchIndex["tar"] = {"doc":"A library for reading and writing TAR archives","items":[[3,"Header","tar","Representation of the header of an entry in an archive",null,null],[3,"UstarHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",0,null],[12,"mode","","",0,null],[12,"uid","","",0,null],[12,"gid","","",0,null],[12,"size","","",0,null],[12,"mtime","","",0,null],[12,"cksum","","",0,null],[12,"typeflag","","",0,null],[12,"linkname","","",0,null],[12,"magic","","",0,null],[12,"version","","",0,null],[12,"uname","","",0,null],[12,"gname","","",0,null],[12,"dev_major","","",0,null],[12,"dev_minor","","",0,null],[12,"prefix","","",0,null],[12,"pad","","",0,null],[3,"GnuHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",1,null],[12,"mode","","",1,null],[12,"uid","","",1,null],[12,"gid","","",1,null],[12,"size","","",1,null],[12,"mtime","","",1,null],[12,"cksum","","",1,null],[12,"typeflag","","",1,null],[12,"linkname","","",1,null],[12,"magic","","",1,null],[12,"version","","",1,null],[12,"uname","","",1,null],[12,"gname","","",1,null],[12,"dev_major","","",1,null],[12,"dev_minor","","",1,null],[12,"atime","","",1,null],[12,"ctime","","",1,null],[12,"offset","","",1,null],[12,"longnames","","",1,null],[12,"unused","","",1,null],[12,"sparse","","",1,null],[12,"isextended","","",1,null],[12,"realsize","","",1,null],[12,"pad","","",1,null],[3,"GnuSparseHeader","","",null,null],[12,"offset","","",2,null],[12,"numbytes","","",2,null],[3,"Entry","","A read-only view into an entry of an archive.",null,null],[3,"Archive","","A top-level representation of an archive file.",null,null],[3,"Entries","","An iterator over the entries of an archive.",null,null],[3,"Builder","","A structure for building archives",null,null],[3,"PaxExtensions","","An iterator over the pax extensions in an archive entry.",null,null],[3,"PaxExtension","","A key/value pair corresponding to a pax extension.",null,null],[4,"EntryType","","Indicate for the type of file described by a header.",null,null],[13,"Regular","","Regular file",3,null],[13,"Link","","Hard link",3,null],[13,"Symlink","","Symbolic link",3,null],[13,"Char","","Character device",3,null],[13,"Block","","Block device",3,null],[13,"Directory","","Directory",3,null],[13,"Fifo","","Named pipe (fifo)",3,null],[13,"Continuous","","Implementation-defined &#39;high-performance&#39; type, treated as regular file",3,null],[13,"GNULongName","","GNU extension - long file name",3,null],[13,"GNULongLink","","GNU extension - long link name (link target)",3,null],[13,"XGlobalHeader","","Global extended header",3,null],[13,"XHeader","","Extended Header",3,null],[11,"new","","Create a new archive with the underlying object as the reader.",4,{"inputs":[{"name":"r"}],"output":{"name":"archive"}}],[11,"into_inner","","Unwrap this archive, returning the underlying object.",4,{"inputs":[{"name":"archive"}],"output":{"name":"r"}}],[11,"entries","","Construct an iterator over the entries in this archive.",4,{"inputs":[{"name":"archive"}],"output":{"name":"result"}}],[11,"unpack","","Unpacks the contents tarball into the specified `dst`.",4,{"inputs":[{"name":"archive"},{"name":"p"}],"output":{"name":"result"}}],[11,"raw","","Indicates whether this iterator will return raw entries or not.",5,{"inputs":[{"name":"entries"},{"name":"bool"}],"output":{"name":"entries"}}],[11,"next","","",5,{"inputs":[{"name":"entries"}],"output":{"name":"option"}}],[11,"new","","Create a new archive builder with the underlying object as the\ndestination of all data written.",6,{"inputs":[{"name":"w"}],"output":{"name":"builder"}}],[11,"into_inner","","Unwrap this archive, returning the underlying object.",6,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"append","","Adds a new entry to this archive.",6,{"inputs":[{"name":"builder"},{"name":"header"},{"name":"r"}],"output":{"name":"result"}}],[11,"append_path","","Adds a file on the local filesystem to this archive.",6,{"inputs":[{"name":"builder"},{"name":"p"}],"output":{"name":"result"}}],[11,"append_file","","Adds a file to this archive with the given path as the name of the file\nin the archive.",6,{"inputs":[{"name":"builder"},{"name":"p"},{"name":"file"}],"output":{"name":"result"}}],[11,"append_dir","","Adds a directory to this archive with the given path as the name of the\ndirectory in the archive.",6,{"inputs":[{"name":"builder"},{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[11,"finish","","Finish writing this archive, emitting the termination sections.",6,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"drop","","",6,{"inputs":[{"name":"builder"}],"output":null}],[11,"path","","Returns the path name for this entry.",7,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"path_bytes","","Returns the raw bytes listed for this entry.",7,{"inputs":[{"name":"entry"}],"output":{"name":"cow"}}],[11,"link_name","","Returns the link name for this entry, if any is found.",7,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"link_name_bytes","","Returns the link name for this entry, in bytes, if listed.",7,{"inputs":[{"name":"entry"}],"output":{"name":"option"}}],[11,"pax_extensions","","Returns an iterator over the pax extensions contained in this entry.",7,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"header","","Returns access to the header of this entry in the archive.",7,{"inputs":[{"name":"entry"}],"output":{"name":"header"}}],[11,"unpack","","Writes this file to the specified location.",7,{"inputs":[{"name":"entry"},{"name":"p"}],"output":{"name":"result"}}],[11,"read","","",7,null],[11,"fmt","","",3,{"inputs":[{"name":"entrytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"entrytype"},{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"entrytype"},{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"entrytype"}}],[11,"new","","Creates a new entry type from a raw byte.",3,{"inputs":[{"name":"u8"}],"output":{"name":"entrytype"}}],[11,"as_byte","","Returns the raw underlying byte that this entry type represents.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"u8"}}],[11,"file","","Creates a new entry type representing a regular file.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"hard_link","","Creates a new entry type representing a hard link.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"symlink","","Creates a new entry type representing a symlink.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"character_special","","Creates a new entry type representing a character special device.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"block_special","","Creates a new entry type representing a block special device.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"dir","","Creates a new entry type representing a directory.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"fifo","","Creates a new entry type representing a FIFO.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"contiguous","","Creates a new entry type representing a contiguous file.",3,{"inputs":[],"output":{"name":"entrytype"}}],[11,"is_file","","Returns whether this type represents a regular file.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_hard_link","","Returns whether this type represents a hard link.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Returns whether this type represents a symlink.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_character_special","","Returns whether this type represents a character special device.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_block_special","","Returns whether this type represents a block special device.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether this type represents a directory.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_fifo","","Returns whether this type represents a FIFO.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_contiguous","","Returns whether this type represents a contiguous file.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_gnu_longname","","Returns whether this type represents a GNU long name header.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_gnu_longlink","","Returns whether this type represents a GNU long link header.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_pax_global_extensions","","Returns whether this type represents a GNU long name header.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"is_pax_local_extensions","","Returns whether this type represents a GNU long link header.",3,{"inputs":[{"name":"entrytype"}],"output":{"name":"bool"}}],[11,"from","std::io::error","",8,{"inputs":[{"name":"tarerror"}],"output":{"name":"error"}}],[11,"new_gnu","tar","Creates a new blank GNU header.",9,{"inputs":[],"output":{"name":"header"}}],[11,"new_ustar","","Creates a new blank UStar header.",9,{"inputs":[],"output":{"name":"header"}}],[11,"new_old","","Creates a new blank old header.",9,{"inputs":[],"output":{"name":"header"}}],[11,"as_old","","View this archive header as a raw &quot;old&quot; archive header.",9,{"inputs":[{"name":"header"}],"output":{"name":"oldheader"}}],[11,"as_old_mut","","Same as `as_old`, but the mutable version.",9,{"inputs":[{"name":"header"}],"output":{"name":"oldheader"}}],[11,"as_ustar","","View this archive header as a raw UStar archive header.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"as_ustar_mut","","Same as `as_ustar_mut`, but the mutable version.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"as_gnu","","View this archive header as a raw GNU archive header.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"as_gnu_mut","","Same as `as_gnu`, but the mutable version.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"as_bytes","","Returns a view into this header as a byte array.",9,null],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",9,null],[11,"set_metadata","","Blanket sets the metadata in this header from the metadata argument\nprovided.",9,{"inputs":[{"name":"header"},{"name":"metadata"}],"output":null}],[11,"size","","Returns the file size this header represents.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_size","","Encodes the `size` argument into the size field of this header.",9,{"inputs":[{"name":"header"},{"name":"u64"}],"output":null}],[11,"path","","Returns the raw path name stored in this header.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"path_bytes","","Returns the pathname stored in this header as a byte array.",9,{"inputs":[{"name":"header"}],"output":{"name":"cow"}}],[11,"set_path","","Sets the path name for this header.",9,{"inputs":[{"name":"header"},{"name":"p"}],"output":{"name":"result"}}],[11,"link_name","","Returns the link name stored in this header, if any is found.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"link_name_bytes","","Returns the link name stored in this header as a byte array, if any.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"set_link_name","","Sets the path name for this header.",9,{"inputs":[{"name":"header"},{"name":"p"}],"output":{"name":"result"}}],[11,"mode","","Returns the mode bits for this file",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_mode","","Encodes the `mode` provided into this header.",9,{"inputs":[{"name":"header"},{"name":"u32"}],"output":null}],[11,"uid","","Returns the value of the owner&#39;s user ID field",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_uid","","Encodes the `uid` provided into this header.",9,{"inputs":[{"name":"header"},{"name":"u32"}],"output":null}],[11,"gid","","Returns the value of the group&#39;s user ID field",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_gid","","Encodes the `gid` provided into this header.",9,{"inputs":[{"name":"header"},{"name":"u32"}],"output":null}],[11,"mtime","","Returns the last modification time in Unix time format",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_mtime","","Encodes the `mtime` provided into this header.",9,{"inputs":[{"name":"header"},{"name":"u64"}],"output":null}],[11,"username","","Return the user name of the owner of this file.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"username_bytes","","Returns the user name of the owner of this file, if present.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"set_username","","Sets the username inside this header.",9,{"inputs":[{"name":"header"},{"name":"str"}],"output":{"name":"result"}}],[11,"groupname","","Return the group name of the owner of this file.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"groupname_bytes","","Returns the group name of the owner of this file, if present.",9,{"inputs":[{"name":"header"}],"output":{"name":"option"}}],[11,"set_groupname","","Sets the group name inside this header.",9,{"inputs":[{"name":"header"},{"name":"str"}],"output":{"name":"result"}}],[11,"device_major","","Returns the device major number, if present.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_device_major","","Encodes the value `major` into the dev_major field of this header.",9,{"inputs":[{"name":"header"},{"name":"u32"}],"output":{"name":"result"}}],[11,"device_minor","","Returns the device minor number, if present.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_device_minor","","Encodes the value `minor` into the dev_minor field of this header.",9,{"inputs":[{"name":"header"},{"name":"u32"}],"output":{"name":"result"}}],[11,"entry_type","","Returns the type of file described by this header.",9,{"inputs":[{"name":"header"}],"output":{"name":"entrytype"}}],[11,"set_entry_type","","Sets the type of file that will be described by this header.",9,{"inputs":[{"name":"header"},{"name":"entrytype"}],"output":null}],[11,"cksum","","Returns the checksum field of this header.",9,{"inputs":[{"name":"header"}],"output":{"name":"result"}}],[11,"set_cksum","","Sets the checksum field of this header based on the current fields in\nthis header.",9,{"inputs":[{"name":"header"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"header"}],"output":{"name":"header"}}],[11,"path_bytes","","See `Header::path_bytes`",0,{"inputs":[{"name":"ustarheader"}],"output":{"name":"cow"}}],[11,"set_path","","See `Header::set_path`",0,{"inputs":[{"name":"ustarheader"},{"name":"p"}],"output":{"name":"result"}}],[11,"username_bytes","","See `Header::username_bytes`",0,null],[11,"set_username","","See `Header::set_username`",0,{"inputs":[{"name":"ustarheader"},{"name":"str"}],"output":{"name":"result"}}],[11,"groupname_bytes","","See `Header::groupname_bytes`",0,null],[11,"set_groupname","","See `Header::set_groupname`",0,{"inputs":[{"name":"ustarheader"},{"name":"str"}],"output":{"name":"result"}}],[11,"device_major","","See `Header::device_major`",0,{"inputs":[{"name":"ustarheader"}],"output":{"name":"result"}}],[11,"set_device_major","","See `Header::set_device_major`",0,{"inputs":[{"name":"ustarheader"},{"name":"u32"}],"output":null}],[11,"device_minor","","See `Header::device_minor`",0,{"inputs":[{"name":"ustarheader"}],"output":{"name":"result"}}],[11,"set_device_minor","","See `Header::set_device_minor`",0,{"inputs":[{"name":"ustarheader"},{"name":"u32"}],"output":null}],[11,"username_bytes","","See `Header::username_bytes`",1,null],[11,"set_username","","See `Header::set_username`",1,{"inputs":[{"name":"gnuheader"},{"name":"str"}],"output":{"name":"result"}}],[11,"groupname_bytes","","See `Header::groupname_bytes`",1,null],[11,"set_groupname","","See `Header::set_groupname`",1,{"inputs":[{"name":"gnuheader"},{"name":"str"}],"output":{"name":"result"}}],[11,"device_major","","See `Header::device_major`",1,{"inputs":[{"name":"gnuheader"}],"output":{"name":"result"}}],[11,"set_device_major","","See `Header::set_device_major`",1,{"inputs":[{"name":"gnuheader"},{"name":"u32"}],"output":null}],[11,"device_minor","","See `Header::device_minor`",1,{"inputs":[{"name":"gnuheader"}],"output":{"name":"result"}}],[11,"set_device_minor","","See `Header::set_device_minor`",1,{"inputs":[{"name":"gnuheader"},{"name":"u32"}],"output":null}],[11,"atime","","Returns the last modification time in Unix time format",1,{"inputs":[{"name":"gnuheader"}],"output":{"name":"result"}}],[11,"set_atime","","Encodes the `atime` provided into this header.",1,{"inputs":[{"name":"gnuheader"},{"name":"u64"}],"output":null}],[11,"ctime","","Returns the last modification time in Unix time format",1,{"inputs":[{"name":"gnuheader"}],"output":{"name":"result"}}],[11,"set_ctime","","Encodes the `ctime` provided into this header.",1,{"inputs":[{"name":"gnuheader"},{"name":"u64"}],"output":null}],[11,"next","","",10,{"inputs":[{"name":"paxextensions"}],"output":{"name":"option"}}],[11,"key","","Returns the key for this key/value pair parsed as a string.",11,{"inputs":[{"name":"paxextension"}],"output":{"name":"result"}}],[11,"key_bytes","","Returns the underlying raw bytes for the key of this key/value pair.",11,null],[11,"value","","Returns the value for this key/value pair parsed as a string.",11,{"inputs":[{"name":"paxextension"}],"output":{"name":"result"}}],[11,"value_bytes","","Returns the underlying raw bytes for this value of this key/value pair.",11,null]],"paths":[[3,"UstarHeader"],[3,"GnuHeader"],[3,"GnuSparseHeader"],[4,"EntryType"],[3,"Archive"],[3,"Entries"],[3,"Builder"],[3,"Entry"],[3,"Error"],[3,"Header"],[3,"PaxExtensions"],[3,"PaxExtension"]]};
initSearch(searchIndex);
